//RFI TAG:driverName=HTML Widget

EMIC:setOutput(TARGET:plugins/www/header.html)
<script type="module" src="/dashboard/.{userName}./.{project}./.{userModule}./JS/inputTime.js"> </script>
EMIC:restoreOutput

EMIC:setOutput(TARGET:temp/header.html)
<script type="module" src="./JS/inputTime.js"> </script>
EMIC:restoreOutput

EMIC:setOutput(TARGET:wwwroot/JS/inputTime.js)
EMIC:setInput(DEV:_WEB/API/Widgets/InputTime/plugins/inputTime.js)
EMIC:restoreOutput

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//                                 Componente
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/*RFI JSon
{
	'Nombre': 'inputTime',
	'NombreToolBox': 'inputTime',
	'Tipo' : 'Widget',
	'title': 'Control deslizante',
	'html-tag': 'emic-widget-inputTime',
}
*/
//	'instance': '{"component":"emic-widget-inputtime","attributes":{}}',

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//                                 Evento
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/*RFI JSon
{
	'Nombre': 'inputTimeChange',
	'NombreToolBox': 'inputTimeChange',
	'Tipo' : 'SistemEvt',
	'title': 'when press mouse over button',
	'instancia':'{
		"NombreWorkBox": "Event.inputTime.change",
		"definir":"event_mousedown_active",
		"parametros": [{"value":"InputTime","title":"InputTime name"},{"value":"Value","title":"InputTime value"}]
		}'
}
*/

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//                                 Funciones
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/**
 * @fn void timeSetValue(int timeName, int Value)
 * @alias timeSetValue
 * @brief Set Value
 * @param timeName timeName
 * @param Value Value
 * @return Nothing
 */ 

function timeSetValue(timeName, value) {
  // Expresión regular para verificar el formato MM:SS
  var regex = /^([01]?[0-9]|2[0-3])([0-5][0-9])([0-5][0-9])$/;  
  var tName = timeName;
  // Este 'if' comprueba si 'timeName' incluye '/',
  // si es así, entonces actualiza 'tName' para ser la porción después de la última '/'
  if (timeName.includes('/')) {
    tName = timeName.substr(timeName.lastIndexOf('/') + 1);
  }
  // Intenta obtener el elemento del documento por su 'id'
  var element = document.getElementById(tName); 
  // Este 'if' comprueba si el elemento con 'id' 'tName' existe
  if (element) {
    if (regex.test(value)) {
      element.value = value;
    } else {
      console.error('El valor proporcionado no tiene el formato HH:MM');
    }
  } else {
    console.log("Elemento con id ", tName, " no encontrado");
  }
}